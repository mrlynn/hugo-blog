let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/go/src/github.com/10gen/stitch-cli
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +29 main.go
badd +64 commands/secrets.go
badd +1 ~/development/stitch/personal-creds
badd +9 ~/development/stitch/prod-creds
badd +349 commands/import.go
badd +99 commands/command.go
badd +22 commands/login.go
badd +1 commands/project_command.go
badd +393 utils/utils.go
badd +1 models/models.go
badd +231 api/stitch_client.go
badd +707 /usr/local/Cellar/go/1.11.1/libexec/src/flag/flag.go
badd +62 commands/secrets_test.go
badd +14 vendor/github.com/mitchellh/cli/command.go
badd +215 .evg.yml
badd +18 contrib/README.md
badd +64 api/api.go
badd +643 /usr/local/Cellar/go/1.11.1/libexec/src/net/http/client.go
badd +1 commands/command_test.go
badd +1 commands/cloud_test.go
badd +557 utils/test/utils.go
badd +1 .eslintrc.js
argglobal
silent! argdel *
set stal=2
edit commands/cloud_test.go
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 127) / 255)
exe '2resize ' . ((&lines * 20 + 21) / 43)
exe 'vert 2resize ' . ((&columns * 128 + 127) / 255)
exe '3resize ' . ((&lines * 19 + 21) / 43)
exe 'vert 3resize ' . ((&columns * 128 + 127) / 255)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 66 - ((18 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
66
normal! 0
lcd ~/go/src/github.com/10gen/stitch-cli
wincmd w
argglobal
if bufexists('~/go/src/github.com/10gen/stitch-cli/.evg.yml') | buffer ~/go/src/github.com/10gen/stitch-cli/.evg.yml | else | edit ~/go/src/github.com/10gen/stitch-cli/.evg.yml | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 218 - ((8 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
218
let s:c = 25 - ((23 * winwidth(0) + 64) / 128)
if s:c > 0
  exe 'normal! ' . s:c . '|zs' . 25 . '|'
else
  normal! 025|
endif
lcd ~/go/src/github.com/10gen/stitch-cli
wincmd w
argglobal
if bufexists('~/go/src/github.com/10gen/stitch-cli/utils/test/utils.go') | buffer ~/go/src/github.com/10gen/stitch-cli/utils/test/utils.go | else | edit ~/go/src/github.com/10gen/stitch-cli/utils/test/utils.go | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 560 - ((12 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
560
normal! 037|
lcd ~/go/src/github.com/10gen/stitch-cli
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 127) / 255)
exe '2resize ' . ((&lines * 20 + 21) / 43)
exe 'vert 2resize ' . ((&columns * 128 + 127) / 255)
exe '3resize ' . ((&lines * 19 + 21) / 43)
exe 'vert 3resize ' . ((&columns * 128 + 127) / 255)
tabedit ~/go/src/github.com/10gen/stitch-cli/commands/project_command.go
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 127) / 255)
exe '2resize ' . ((&lines * 19 + 21) / 43)
exe 'vert 2resize ' . ((&columns * 128 + 127) / 255)
exe '3resize ' . ((&lines * 20 + 21) / 43)
exe 'vert 3resize ' . ((&columns * 128 + 127) / 255)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 19 - ((18 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
19
normal! 0
lcd ~/go/src/github.com/10gen/stitch-cli
wincmd w
argglobal
if bufexists('~/go/src/github.com/10gen/stitch-cli/commands/import.go') | buffer ~/go/src/github.com/10gen/stitch-cli/commands/import.go | else | edit ~/go/src/github.com/10gen/stitch-cli/commands/import.go | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 129 - ((2 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
129
normal! 03|
lcd ~/go/src/github.com/10gen/stitch-cli
wincmd w
argglobal
if bufexists('~/go/src/github.com/10gen/stitch-cli/commands/command.go') | buffer ~/go/src/github.com/10gen/stitch-cli/commands/command.go | else | edit ~/go/src/github.com/10gen/stitch-cli/commands/command.go | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
lcd ~/go/src/github.com/10gen/stitch-cli
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 127) / 255)
exe '2resize ' . ((&lines * 19 + 21) / 43)
exe 'vert 2resize ' . ((&columns * 128 + 127) / 255)
exe '3resize ' . ((&lines * 20 + 21) / 43)
exe 'vert 3resize ' . ((&columns * 128 + 127) / 255)
tabnext 1
set stal=1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOF
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
