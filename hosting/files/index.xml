<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael Lynn</title>
    <link>https://hugo-blog-ilbfw.mongodbstitch.com/</link>
    <description>Recent content on Michael Lynn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Wed, 26 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hugo-blog-ilbfw.mongodbstitch.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Links</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/links/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/links/</guid>
      <description>Places I frequently visit.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/about/</guid>
      <description> Welcome. Michael is a passionate software developer, fitness enthusiast, father, and husband. You can find more content below:
 https://www.mongodb.com/blog/post/integrating-mongodb-and-amazon-kinesis-for-intelligent-durable-streams https://www.mongodb.com/blog/post/stitching-sheets-using-mongodb-stitch-to-create-an-api-for-data-in-google-sheets https://www.mongodb.com/blog/post/creating-a-data-enabled-api-in-10-minutes-with-mongodb-stitch  </description>
    </item>
    
    <item>
      <title>Creating a Data Enabled API in 10 Minutes with MongoDB Stitch</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/post/creating-a-data-enabled-api-in-10-minutes-with-mongodb-stitch/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/post/creating-a-data-enabled-api-in-10-minutes-with-mongodb-stitch/</guid>
      <description>Introduction Creating an API that exposes data doesn’t have to be complicated. With MongoDB Stitch, you can create a data enabled endpoint in about 10 minutes or less. At the heart of the entire process is MongoDB Stitch’s Services. There are several from which to choose and to create a data enabled endpoint, you’ll choose the HTTP Service with a Webhook.
When you create an HTTP Service, you’re enabling access to this service from Stitch’s serverless functions in the form of an object called context.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/resume/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/resume/</guid>
      <description>This is my resume.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/post/goisforlovers/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://hugo-blog-ilbfw.mongodbstitch.com/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hugo-blog-ilbfw.mongodbstitch.com/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>